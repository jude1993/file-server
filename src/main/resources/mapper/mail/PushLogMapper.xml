<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jude.file.mapper.mail.PushLogMapper">
  <resultMap id="BaseResultMap" type="com.jude.file.bean.mail.dao.PushLog">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="USER_ID" jdbcType="BIGINT" property="userId" />
    <result column="EMAIL_ADDRESS" jdbcType="VARCHAR" property="emailAddress" />
    <result column="FILE_NAME" jdbcType="VARCHAR" property="fileName" />
    <result column="SUCCESS" jdbcType="BIT" property="success" />
    <result column="PUSH_TIME" jdbcType="TIMESTAMP" property="pushTime" />
    <result column="RETRY" jdbcType="INTEGER" property="retry" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, USER_ID, EMAIL_ADDRESS, FILE_NAME, SUCCESS, PUSH_TIME, RETRY
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from push_log
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from push_log
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.jude.file.bean.mail.dao.PushLog">
    insert into push_log (ID, USER_ID, EMAIL_ADDRESS,
      FILE_NAME, SUCCESS, PUSH_TIME, 
      RETRY)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{emailAddress,jdbcType=VARCHAR},
      #{fileName,jdbcType=VARCHAR}, #{success,jdbcType=BIT}, #{pushTime,jdbcType=TIMESTAMP},
      #{retry,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jude.file.bean.mail.dao.PushLog">
    insert into push_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="emailAddress != null">
        EMAIL_ADDRESS,
      </if>
      <if test="fileName != null">
        FILE_NAME,
      </if>
      <if test="success != null">
        SUCCESS,
      </if>
      <if test="pushTime != null">
        PUSH_TIME,
      </if>
      <if test="retry != null">
        RETRY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="emailAddress != null">
        #{emailAddress,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="success != null">
        #{success,jdbcType=BIT},
      </if>
      <if test="pushTime != null">
        #{pushTime,jdbcType=TIMESTAMP},
      </if>
      <if test="retry != null">
        #{retry,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jude.file.bean.mail.dao.PushLog">
    update push_log
    <set>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=BIGINT},
      </if>
      <if test="emailAddress != null">
        EMAIL_ADDRESS = #{emailAddress,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        FILE_NAME = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="success != null">
        SUCCESS = #{success,jdbcType=BIT},
      </if>
      <if test="pushTime != null">
        PUSH_TIME = #{pushTime,jdbcType=TIMESTAMP},
      </if>
      <if test="retry != null">
        RETRY = #{retry,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jude.file.bean.mail.dao.PushLog">
    update push_log
    set USER_ID = #{userId,jdbcType=BIGINT},
      EMAIL_ADDRESS = #{emailAddress,jdbcType=VARCHAR},
      FILE_NAME = #{fileName,jdbcType=VARCHAR},
      SUCCESS = #{success,jdbcType=BIT},
      PUSH_TIME = #{pushTime,jdbcType=TIMESTAMP},
      RETRY = #{retry,jdbcType=INTEGER}
    where ID = #{id,jdbcType=BIGINT}
  </update>

  <select id="queryPage" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from push_log
    limit #{index,jdbcType=INTEGER}, #{size, jdbcType=INTEGER}
  </select>
</mapper>